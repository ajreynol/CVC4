#!/bin/bash

# REQUIRES: input_problem.smt2
# REQUIRES: full_io_spec.smt2
# REQUIRES: input_candidates.smt2
# REQUIRES: input_grammar.sy

# OUTPUTS: 
#   Statistics on how accurate the current candidate in file
#   [input_candidates.smt2] is with respect to the IC problem given by
#   [input_problem.smt2] whose I/O behavior is cached in file
#   [full_io_spec.smt2].

function mk_input_to_test_ic()
{
  echo "(set-logic ALL)"
  cat $1
  echo "(assert (input s t))"
  # must extract define-fun from the sygus grammar
  grep "define-fun" $2
  cat $3
  echo "(assert (IC s t))"
  cat $4
  echo "(check-sat)"
}

if grep -q define-fun input_candidates.smt2;
then
  # make new candidate, which is the last from the list in input_candidates.smt2
  tail -1 input_candidates.smt2 > temp_candidate.smt2

  echo "Evaluating candidate:"
  cat temp_candidate.smt2

  # generate the input problem for cvc4 to test a candidate IC
  mk_input_to_test_ic input_problem.smt2 input_grammar.sy temp_candidate.smt2 full_io_spec.smt2 > temp_input_to_eval_ic.smt2

  # evaluate the candidate
  pr-ajr-cvc4 --test-ic-full --no-gen-ic-use-sc --gen-ic-read-io-string --fmf-type-completion-thresh=2000 temp_input_to_eval_ic.smt2

  # clean up
  rm -f temp_input_to_eval_ic.smt2
  rm -f temp_candidate.smt2
fi
