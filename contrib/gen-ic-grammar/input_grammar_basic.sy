(set-logic FP)
(synth-fun IC ((s (_ FloatingPoint 4 5)) (t (_ FloatingPoint 4 5))) Bool
  ((Start Bool (
     true
     false
     (not Start)

     (= StartFP StartFP)
;     (fp.eq StartFP StartFP)
     (fp.leq StartFP StartFP)
     (fp.lt StartFP StartFP)
;     (fp.geq StartFP StartFP)
;     (fp.gt StartFP StartFP)

     (fp.isNormal StartFP)
     (fp.isSubnormal StartFP)
     (fp.isZero StartFP)
;     (fp.isInfinite StartFP)
;     (fp.isNaN StartFP)
     (fp.isNegative StartFP)
     (fp.isPositive StartFP)
     
     (ite Start Start Start)
   ))
   (StartFP (_ FloatingPoint 4 5) (
     s
     t

;     (_ NaN 4 5)
;     (_ +oo 4 5)
;     (_ -oo 4 5)
;     (_ +zero 4 5)
;     (_ -zero 4 5)

;     (fp.abs StartFP)
     (fp.neg StartFP)
;     (fp.sqrt StartRM StartFP)
     (fp.roundToIntegral StartRM StartFP)

;     (fp.add StartRM StartFP StartFP)
;     (fp.sub StartRM StartFP StartFP)
     (fp.mul StartRM StartFP StartFP)
     (fp.div StartRM StartFP StartFP)
     (fp.fma StartRM StartFP StartFP StartFP)

     (fp.rem StartFP StartFP)
;     (fp.min StartFP StartFP)
;     (fp.max StartFP StartFP)
   ))
   (StartRM RoundingMode
     (RNE RNA RTZ RTP RTN))
))
(declare-var s (_ FloatingPoint 4 5))
(declare-var t (_ FloatingPoint 4 5))
